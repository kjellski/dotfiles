#!/usr/bin/env python
import argparse, os, logging, datetime, shutil, sys
from lib.DotFile import DotFile

# ------------------------------------------------------------------
# Arguments and defaults
parser = argparse.ArgumentParser(description='''A ~/.files profile management. 
    This program tries to never harm any existing environment. 
    It backs up every file it should deploy and every deploy is linked to for later referenece.''',
    epilog='author: @kjellski')
parser.add_argument('-p', 
    '--profile', 
    help='selects the profile to be deployed', 
    default='compatible')
parser.add_argument('-t', 
    '--target', 
    help='selects the folder to deploy in, if not existent, will be created', 
    default='tmp')
args = parser.parse_args()
print args

profiles_folder = 'profiles'
backups_folder = os.path.join('backups', datetime.datetime.now().strftime("%Y-%m-%d_%H:%M:%S"))
working_folder = 'active'
target_folder = args.target

# complete path of profile
profile_path = os.path.abspath(os.path.join(profiles_folder, args.profile))

backup_path = os.path.abspath(os.path.join(backups_folder, datetime.datetime.now().strftime("%Y-%m-%d_%H:%M:%S")))
DotFile.backup_path = backup_path

working_path = os.path.abspath(working_folder)
DotFile.working_path = working_path

target_path = target_folder
DotFile.target_path = target_path

# now check for the folder existence
if not os.path.exists(profile_path):
    logging.error('The profile was not found: ' + profile_path)

# ------------------------------------------------------------------
# copy over the profile to the operationing folder
try:
    #if the working copy of the wokring profile exists, delete it.
    shutil.rmtree(working_path)
    # copy over the working profile
    shutil.copytree(profile_path, working_path)
except Exception, e:
    logging.error(e)
    logging.error('Unable to copy the profile to the working folder, exiting.')
    parser.usage
    sys.exit()

for file in os.listdir(working_path):
    DotFile(os.path.abspath(os.path.join(working_path, file)))

